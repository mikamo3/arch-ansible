#!/bin/bash
# NFS mount management script
# Generated by Ansible - Storage Role

set -euo pipefail

# Colors for output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    local color=$1
    local message=$2
    echo -e "${color}${message}${NC}"
}

# Function to check if mount point is already mounted
is_mounted() {
    local mount_point=$1
    mount | grep -q " ${mount_point} "
}

# Function to test server connectivity
test_server_connectivity() {
    local server=$1
    local port=${2:-2049}
    
    print_status "$YELLOW" "Testing connectivity to NFS server ${server}..."
    if timeout 5 nc -z "$server" "$port" 2>/dev/null; then
        print_status "$GREEN" "✓ Server ${server} is reachable"
        return 0
    else
        print_status "$RED" "✗ Server ${server} is not reachable"
        return 1
    fi
}

# Mount all configured NFS shares
mount_nfs_shares() {
    local success_count=0
    local total_count=0
    
{% for mount in storage.nfs_client.mounts %}
    total_count=$((total_count + 1))
    
    print_status "$YELLOW" "Mounting {{ mount.server }}:{{ mount.remote_path }} -> {{ mount.local_path }}"
    
    # Check if already mounted
    if is_mounted "{{ mount.local_path }}"; then
        print_status "$YELLOW" "Already mounted: {{ mount.local_path }}"
        success_count=$((success_count + 1))
    # Test server connectivity and attempt mount
    elif test_server_connectivity "{{ mount.server }}"; then
        # Attempt to mount
        if mount "{{ mount.local_path }}" 2>/dev/null; then
            print_status "$GREEN" "✓ Successfully mounted {{ mount.local_path }}"
            success_count=$((success_count + 1))
        else
            print_status "$RED" "✗ Failed to mount {{ mount.local_path }}"
        fi
    else
        print_status "$RED" "Skipping mount due to connectivity issue"
    fi
{% endfor %}
    
    print_status "$YELLOW" "Mount summary: ${success_count}/${total_count} successful"
    
    if [ "$success_count" -eq "$total_count" ]; then
        exit 0
    else
        exit 1
    fi
}

# Main execution
print_status "$YELLOW" "Starting NFS mount process..."
mount_nfs_shares