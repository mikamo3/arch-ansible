#!/bin/bash
# NFS status check script
# Generated by Ansible - Storage Role

set -euo pipefail

# Colors for output
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    local color=$1
    local message=$2
    echo -e "${color}${message}${NC}"
}

# Function to check if mount point is mounted
is_mounted() {
    local mount_point=$1
    mount | grep -q " ${mount_point} "
}

# Function to test server connectivity
test_server_connectivity() {
    local server=$1
    local port=${2:-2049}
    
    if timeout 3 nc -z "$server" "$port" 2>/dev/null; then
        return 0
    else
        return 1
    fi
}

# Function to get mount information
get_mount_info() {
    local mount_point=$1
    mount | grep " ${mount_point} " | head -1
}

# Function to check NFS server status
check_nfs_server_status() {
    local server=$1
    
    print_status "$BLUE" "NFS Server: $server"
    
    # Check basic connectivity
    if test_server_connectivity "$server"; then
        print_status "$GREEN" "  ✓ Server reachable (port 2049)"
        
        # Try to get NFS exports if showmount is available
        if command -v showmount >/dev/null 2>&1; then
            print_status "$YELLOW" "  Available exports:"
            if timeout 5 showmount -e "$server" 2>/dev/null | tail -n +2 | sed 's/^/    /'; then
                true
            else
                print_status "$RED" "    Failed to retrieve exports"
            fi
        fi
    else
        print_status "$RED" "  ✗ Server unreachable"
    fi
    echo
}

# Main status check function
check_nfs_status() {
    print_status "$BLUE" "=== NFS Mount Status ==="
    echo
    
    # Check each configured mount
{% for mount in storage.nfs_client.mounts %}
    print_status "$BLUE" "Mount: {{ mount.server }}:{{ mount.remote_path }} -> {{ mount.local_path }}"
    
    if is_mounted "{{ mount.local_path }}"; then
        print_status "$GREEN" "  ✓ Mounted"
        mount_info=$(get_mount_info "{{ mount.local_path }}")
        print_status "$YELLOW" "  Info: $mount_info"
        
        # Test access
        if [ -d "{{ mount.local_path }}" ] && [ -r "{{ mount.local_path }}" ]; then
            file_count=$(find "{{ mount.local_path }}" -maxdepth 1 2>/dev/null | wc -l)
            file_count=$((file_count - 1)) # Subtract 1 for the directory itself
            print_status "$GREEN" "  ✓ Accessible ($file_count items)"
        else
            print_status "$RED" "  ✗ Mount point not accessible"
        fi
    else
        print_status "$RED" "  ✗ Not mounted"
        
        # Check server connectivity
        if test_server_connectivity "{{ mount.server }}"; then
            print_status "$YELLOW" "  Server is reachable - run 'mount-nfs-shares' to mount"
        else
            print_status "$RED" "  Server is not reachable"
        fi
    fi
    echo
{% endfor %}

    # Check unique servers
    print_status "$BLUE" "=== NFS Server Status ==="
    echo
{% set servers = [] %}
{% for mount in storage.nfs_client.mounts %}
{% if mount.server not in servers %}
{{ servers.append(mount.server) or "" }}
{% endif %}
{% endfor %}
{% for server in servers %}
    check_nfs_server_status "{{ server }}"
{% endfor %}

    # Show home directory symlinks
    print_status "$BLUE" "=== Home Directory Links ==="
    echo
{% for mount in storage.nfs_client.mounts %}
{% if mount.create_home_symlink | default(false) %}
    symlink_path="{{ ansible_user_dir }}/{{ mount.local_path | basename }}"
    if [ -L "$symlink_path" ]; then
        target=$(readlink "$symlink_path")
        if [ -d "$target" ]; then
            print_status "$GREEN" "  ✓ ~/{{ mount.local_path | basename }} -> $target"
        else
            print_status "$YELLOW" "  ~ ~/{{ mount.local_path | basename }} -> $target (target not accessible)"
        fi
    else
        print_status "$RED" "  ✗ ~/{{ mount.local_path | basename }} (symlink missing)"
    fi
{% endif %}
{% endfor %}
}

# Parse arguments
case "${1:-status}" in
    status|--status|-s)
        check_nfs_status
        ;;
    --help|-h)
        echo "Usage: $(basename "$0") [status]"
        echo "Shows the status of all configured NFS mounts"
        echo ""
        echo "Options:"
        echo "  status, -s, --status    Show NFS mount status (default)"
        echo "  -h, --help             Show this help message"
        exit 0
        ;;
    *)
        echo "Unknown option: $1"
        echo "Use --help for usage information"
        exit 1
        ;;
esac